version: '3.8'

services:
  # PostgreSQL Database with pgvector extension
  db:
    image: pgvector/pgvector:pg16
    container_name: scrumix-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: scrumix_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: scrumix
      # Remove POSTGRES_HOST_AUTH_METHOD to use password authentication
    ports:
      - "5433:5432"  # External port 5433 (matches your config)
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d/
    networks:
      - scrumix-local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scrumix_dev"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: scrumix-backend-local
    restart: unless-stopped
    environment:
      # Database connection - using service name 'db' to match your config
      POSTGRES_SERVER: db  # Matches your config.py setting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: scrumix
      POSTGRES_DB: scrumix_dev
      POSTGRES_PORT: 5432  # Internal Docker port
      
      # Application settings
      SECRET_KEY: dev-secret-key-not-for-production
      ENVIRONMENT: development
      DEBUG_OAUTH: true
      
      # URLs
      BACKEND_URL: http://localhost:8000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app  # Mount source code for development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - scrumix-local
    command: ["uvicorn", "scrumix.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
  
networks:
  scrumix-local:
    driver: bridge

volumes:
  postgres_data:
